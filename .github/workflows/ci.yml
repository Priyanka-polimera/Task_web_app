name: CI/CD Pipeline

# Trigger the workflow on pushes to the master/main branch
on:
  push:
    branches:
      - main

# Define the jobs
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code from GitHub repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # Step 3: Run Unit Tests
      - name: Run unit tests
        run: |
          pytest

      # Step 4: Set up Docker to build the container
      - name: Build Docker image
        run: |
          docker build -t webapp .

  deploy:
    runs-on: ubuntu-latest
    needs: build  # This makes the deploy job depend on the build job
    steps:
      # Step 1: Checkout the code again for deployment
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Log in to Docker Hub (replace credentials with your own secrets)
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      # Step 3: Build the Docker image and push it to Docker Hub
      - name: Build and Push Docker image
        run: |
          docker build -t umapriyanka/webapp:latest .
          docker push umapriyanka/webapp:latest

      # Step 4: Deploy the Docker container (this step can be tailored based on deployment platform)
      - name: Deploy Docker container
        run: |
          docker run -d -p 5000:5000 umapriyanka/webapp:latest
